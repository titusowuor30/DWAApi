# Generated by Django 4.1.7 on 2023-03-22 11:59

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='DatasetColumns_Ranaming',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataset_name', models.CharField(default='datim', help_text='Dataset Name', max_length=255)),
                ('original_name', models.CharField(default='orglevel2', max_length=500, null=True)),
                ('rename_to', models.CharField(default='county', help_text='Rename columns to a simpler name', max_length=255, null=True)),
            ],
            options={
                'verbose_name_plural': 'Rename Dataset Columns',
                'db_table': 'dataset_column_renaming',
            },
        ),
        migrations.CreateModel(
            name='GruopSeriesData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dataset_name', models.CharField(default='datim', help_text='Dataset Name', max_length=255)),
                ('group_by', models.CharField(default='DATIM_Indicator_Category', help_text='Group dataset by indicator category', max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Series Data Grouping',
                'db_table': 'series_groups',
            },
        ),
        migrations.CreateModel(
            name='SeriesColumns',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datim_main_comparison_column', models.CharField(default='Datim_Disag_Name', help_text='Map indicators to MOH using this column', max_length=255)),
                ('moh_main_comparison_column', models.CharField(default='MOH_Indicator_Name', help_text='Map indicators to Datim using this column', max_length=255)),
                ('datim_cols', models.TextField(default='orgunitlevel2,orgunitlevel2,orgunitlevel3,orgunitlevel4,orgunitlevel5,organisationunitid,dataid,dataname,Oct to Dec 2021,Jan to Mar 2022,Apr to Jun 2022', max_length=1500)),
                ('moh_cols', models.TextField(default='MOH_FacilityID,facility,ward,subcounty,county,MOH_IndicatorCode,inndicator,Value,Period', max_length=1500)),
                ('datim_moh_columns_to_display', models.TextField(default='MOH_FacilityID,MOH_IndicatorCode,DATIM_Disag_ID,county,subcounty,ward,facility', max_length=1500)),
            ],
            options={
                'verbose_name_plural': 'Dataset Series Columns To Map',
                'db_table': 'mapping_series_columns',
            },
        ),
        migrations.CreateModel(
            name='SeriesRegex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('regex_name', models.CharField(default='Ageset Regex', help_text='Use names related to what the regex does e.g ageset regex for getting ageset', max_length=255)),
                ('regex_pattern', models.CharField(default='(\\d{2}[+])|(\\d+[-]\\d+)|([<]\\d{1})', help_text='Load regex as raw using r', max_length=1500)),
            ],
            options={
                'verbose_name_plural': 'Mapping regex definations',
                'db_table': 'series_regex',
            },
        ),
    ]
